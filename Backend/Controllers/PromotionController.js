import e from "express";
import Coupon from "../Models/Coopon.js";

export const createCoupon = async (req, res) => {
  try {
    const newCoupon = await Coupon.create(req.body);

    res.status(201).json({ newCoupon });
  } 
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export const getAllCoupons = async (req, res) => {
  try {
    const coupons = await Coupon.find();

    res.status(200).json({ coupons });
  } 
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export const getCouponById = async (req, res) => {
  try {
    const { id } = req.params;

    const coupon = await Coupon.findById(id);

    if (!coupon) {
      return res.status(404).json({ message: "Coupon not found" });
    }

    res.status(200).json({ coupon });
  } 
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export const updateCoupon = async (req, res) => {
  try {
    const { id } = req.params;

    const coupon = req.body;

    const existingCoupon = await Coupon.findById(id);

    if (!existingCoupon) {
      return res.status(404).json({ message: "Coupon not found" });
    }

    existingCoupon.couponCode = coupon.couponCode || existingCoupon.couponCode;
    existingCoupon.discount = coupon.discount || existingCoupon.discount;
    existingCoupon.expiryDate = coupon.expiryDate || existingCoupon.expiryDate;

    const updatedCoupon = await existingCoupon.save();

    res.status(200).json({ coupon: updatedCoupon });
  } 
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export const deleteCoupon = async (req, res) => {
  try {
    const { id } = req.params;

    const coupon = await Coupon.findByIdAndDelete(id);

    if (!coupon) {
      return res.status(404).json({ message: "Coupon not found" });
    }

    res.status(200).json({ message: "Coupon deleted successfully" });
  } 
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

export const validCoupon = async (req, res) => {
  try{

    const {couponCode} = req.body;

    const coupon = await Coupon.findOne({ couponCode });

    if(!coupon){
      return res.status(404).json({ message: "Coupon not found" });
    }

    res.status(200).json({ coupon });
  }
  catch (error) {
    res.status(500).json({ message: error.message });
  }
};

const generateCouponCode = () => {
  return 'AUTO-' + Math.random().toString(36).substring(2, 10).toUpperCase();
};

exports.generateAutoCoupons = async (req, res) => {
  try {
    const users = await Order.aggregate([
      { $group: { _id: "$user", orderCount: { $sum: 1 } } },
      { $match: { orderCount: { $gt: 10 } } }
    ]);

    let created = [];

    for (let user of users) {
      const exists = await Coupon.findOne({
        userId: user._id,
        autoGenerated: true
      });

      if (!exists) {
        const coupon = new Coupon({
          code: generateCouponCode(),
          discountPercentage: 10, // Set your discount value
          expiryDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),
          userId: user._id,
          autoGenerated: true
        });

        await coupon.save();
        created.push(coupon);
      }
    }

    res.status(200).json({ message: 'Auto coupons generated', created });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Server Error' });
  }
};

// Optional: Fetch coupons for logged-in user
exports.getUserCoupons = async (req, res) => {
  try {
    const coupons = await Coupon.find({ userId: req.user.id });
    res.status(200).json(coupons);
  } catch (err) {
    res.status(500).json({ error: 'Server Error' });
  }
};